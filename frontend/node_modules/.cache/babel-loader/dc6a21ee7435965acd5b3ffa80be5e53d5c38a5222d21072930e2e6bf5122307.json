{"ast":null,"code":"var _jsxFileName = \"/home/qodeleaf/arushi/promil/frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport '../styles/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const checkforregistration = () => {\n    let values = {\n      fullname: fullname,\n      email: email,\n      password: password\n    };\n    fetch(`localhost:5000/register`, {\n      method: 'post',\n      headers: 'content-application/json',\n      body: JSON.stringify(values)\n    }).then(res => {\n      if (res == 200) {\n        console.log('register succesfuly');\n        window.location = '/Login';\n      } else {\n        alert(`${res.status}`);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign up Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setFullname(e.target.value),\n          type: \"text\",\n          name: \"fullname\",\n          placeholder: \"Enter Name Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: fullname,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter Email Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          name: \"\",\n          placeholder: \"Enter Password Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnn\",\n          onClick: checkforregistration,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"vgI0lXP/YrNnSWLXmjr9J7xHpq4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","fullname","setFullname","email","setEmail","password","setPassword","checkforregistration","values","fetch","method","headers","body","JSON","stringify","then","res","console","log","window","location","alert","status","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","name","placeholder","onClick","href","_c","$RefreshReg$"],"sources":["/home/qodeleaf/arushi/promil/frontend/src/pages/Register.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport '../styles/register.css'\n\n\nconst Register=()=>{\n  const [fullname, setFullname]=useState(\"\")\n  const [email, setEmail]=useState(\"\")\n    const [password, setPassword]=useState(\"\")\n\n\n    const checkforregistration = () =>{\n        let values = {fullname:fullname,email: email, password: password};\n        fetch(`localhost:5000/register`,{\n            method: 'post',\n            headers: 'content-application/json',\n            body: JSON.stringify(values)\n        }).then((res)=>{\n            if(res== 200){\n                console.log('register succesfuly')\n                window.location = '/Login'\n            }\n            else{\n                alert(`${res.status}`)\n            }\n        })\n      }\n  return(\n    <>\n    <div className='main1'>\n        <div className='form1'> \n            <h2>Sign up Here</h2>\n            <input value = {email} onChange={(e)=>setFullname(e.target.value)} type=\"text\" name=\"fullname\" placeholder=\"Enter Name Here\"/>\n            <input value = {fullname} onChange={(e)=>setEmail(e.target.value)} type=\"email\" name=\"email\" placeholder=\"Enter Email Here\"/>\n            <input value = {password} onChange={(e)=>setPassword(e.target.value)} type=\"password\" name=\"\" placeholder=\"Enter Password Here\"/>\n            <button className=\"btnn\" onClick={checkforregistration}>Register</button>\n            <p className=\"link\"><a href=\"/\">back</a></p>\n        </div>\n    </div>\n     \n    </>\n  )\n}\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}